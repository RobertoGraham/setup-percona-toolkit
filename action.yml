name: Set up Percona Toolkit
author: Roberto Graham
description: Sets up Percona Toolkit in your GitHub Actions workflow.
inputs:
  product-version:
    description: Product Version of Percona Toolkit to set up.
    required: false
    default: '3.7.0'
runs:
  using: composite
  steps:
    - name: Set up Node.js
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # https://github.com/actions/setup-node/releases/tag/v4.2.0
      with:
        node-version: 'lts/*'

    - name: Install @actions/tool-cache package
      shell: bash
      run: npm install @actions/tool-cache

    - name: Install Percona Toolkit
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # https://github.com/actions/github-script/releases/tag/v7.0.1
      with:
        script: |-
          const toolCache = require('@actions/tool-cache');
          const productVersion = core.getInput('product-version', { required: true });
          let cachedPerconaToolkitPath = toolCache.find('percona-toolkit', productVersion);
          if (cachedPerconaToolkitPath === '') {
            const compressedPerconaToolkitTarballPath = await toolCache.downloadTool(`https://downloads.percona.com/downloads/percona-toolkit/${productVersion}/binary/tarball/percona-toolkit-${productVersion}_x86_64.tar.gz`);
            const perconaToolkitPath = await toolCache.extractTar(compressedPerconaToolkitTarballPath);
            cachedPerconaToolkitPath = await toolCache.cacheDir(perconaToolkitPath, 'percona-toolkit', productVersion);
          }
          core.addPath(`${cachedPerconaToolkitPath}/percona-toolkit-${productVersion}/bin`);
